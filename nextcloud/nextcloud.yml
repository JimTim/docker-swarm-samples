version: '3.2'
services:
  db:
    image: postgres:11
    networks:
      - traefik-public
    volumes:
      - nextcloud-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=idontcare
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    deploy:
      placement:
        constraints:
          - node.role == worker
          - node.labels.nextcloud.nextcloud-data == true
      replicas: 1
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      labels:
        - "traefik.enable=false"
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
  app:
    image: nextcloud:23
    networks:
      - traefik-public
    volumes:
      - nextcloud-data:/var/www/html
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    deploy:
      placement:
        constraints:
          - node.role == worker
          - node.labels.nextcloud.nextcloud-data == true
      replicas: 1
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.nextcloud-http.rule=Host(`${DOMAIN}`)
        - traefik.http.routers.nextcloud-http.entrypoints=http
        - traefik.http.routers.nextcloud-http.middlewares=https-redirect,nextcloud-headers
        - traefik.http.routers.nextcloud-https.rule=Host(`${DOMAIN}`)
        - traefik.http.routers.nextcloud-https.entrypoints=https
        - traefik.http.routers.nextcloud-https.tls=true
        - traefik.http.routers.nextcloud-https.tls.certresolver=le
        - traefik.http.routers.nextcloud-https.middlewares=nextcloud-headers,nextcloud-redirect
        - traefik.http.middlewares.nextcloud-redirect.redirectregex.permanent=true
        - traefik.http.middlewares.nextcloud-redirect.redirectregex.regex=https://(.*)/.well-known/(card|cal)dav
        - traefik.http.middlewares.nextcloud-redirect.redirectregex.replacement=https://$$1/remote.php/dav/
        - traefik.http.middlewares.nextcloud-headers.headers.STSSeconds=315360000
        - traefik.http.middlewares.nextcloud-headers.headers.browserXSSFilter=true
        - traefik.http.middlewares.nextcloud-headers.headers.contentTypeNosniff=true
        - traefik.http.middlewares.nextcloud-headers.headers.forceSTSHeader=true
        - traefik.http.middlewares.nextcloud-headers.headers.STSIncludeSubdomains=true
        - traefik.http.middlewares.nextcloud-headers.headers.STSPreload=true
        - traefik.http.middlewares.nextcloud-headers.headers.frameDeny=false
        - traefik.http.middlewares.nextcloud-headers.headers.customresponseheaders.X-Frame-Options=SAMEORIGIN
        - traefik.http.services.nextcloud.loadbalancer.server.port=80
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
    depends_on:
      - db
  cron:
    image: nextcloud:21
    networks:
      - traefik-public
    volumes:
      - nextcloud-data:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - db
    deploy:
      placement:
        constraints:
          - node.role == worker
          - node.labels.nextcloud.nextcloud-data == true
      replicas: 1
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
      labels:
        - "traefik.enable=false"
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
volumes:
  nextcloud-data:
  nextcloud-db:
networks:
  traefik-public:
    external:
      name: traefik-public